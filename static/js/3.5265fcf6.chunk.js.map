{"version":3,"sources":["component/image/styles.js","component/image/index.jsx"],"names":["container","display","width","height","flexWrap","margin","justifyContent","overflowY","loading","color","alignItems","fontSize","fontWeight","postContainer","backgroundColor","borderRadius","boxShadow","postTitle","textAlign","fontFamily","cursor","imageDiv","maxWidth","overflow","imageContainer","objectFit","postExcerpt","pet","props","getExcerpt","e","element","target","parentElement","childNodes","console","log","x","clientX","document","body","scrollLeft","y","clientY","scrollTop","style","left","top","outExcerpt","getDcardAPIPost","nextProps","setState","ps","items","url","type","fetch","mode","then","res","json","result","state","push","error","loaded","background","handleImageLoad","addEventListener","alert","this","styles","message","map","post","key","createdAt","id","onClick","window","open","title","media","imgData","index","href","alt","src","onLoad","excerpt","Component","Radium"],"mappings":"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","file":"static/js/3.5265fcf6.chunk.js","sourcesContent":["export default {\r\n  container: {\r\n    display: 'flex',\r\n    width: '85vw',\r\n    height: '90vh',\r\n    flexWrap: 'wrap',\r\n    margin: 'auto',\r\n    justifyContent: 'space-around',\r\n    overflowY: 'auto',\r\n  },\r\n  loading: {\r\n    color: 'pink',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    fontSize: '50px',\r\n    fontWeight: 'bold',\r\n  },\r\n  postContainer: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-around',\r\n    backgroundColor: 'wheat',\r\n    margin: '2%',\r\n    borderRadius: '50px',\r\n    width: '100%',\r\n    ':hover': {\r\n      boxShadow: '-5px 9px 14px 0px black',\r\n    },\r\n  },\r\n  postTitle: {\r\n    width: 'inherit',\r\n    textAlign: 'center',\r\n    margin: '2%',\r\n    color: 'darkred',\r\n    fontSize: '150%',\r\n    fontFamily: '微軟正黑體',\r\n    fontWeight: 'bold',\r\n    cursor: 'pointer',\r\n    ':hover': {\r\n      color: 'black',\r\n    }\r\n  },\r\n  imageDiv: {\r\n    margin: '0 0 8%',\r\n    width: 'auto',\r\n    maxWidth: '60vw',\r\n    height: '25vw',\r\n    overflow: 'hidden',\r\n    ':hover': {\r\n      boxShadow: '-5px 9px 14px 0px black',\r\n    },\r\n    '@media only screen and (max-width: 550px)': {\r\n      width: 'auto',\r\n      height: 'auto',\r\n    },\r\n  },\r\n  imageContainer: {\r\n    width: 'auto',\r\n    height: '25vw',\r\n    margin: 'auto',\r\n    objectFit: 'contain',\r\n    '@media only screen and (max-width: 550px)': {\r\n      width: '60vw',\r\n      height: '65vw',\r\n    }\r\n  },postExcerpt:{\r\n    margin: '0 5% 5% 5%',\r\n    fontSize: '125%',\r\n    fontFamily: '微軟正黑體',\r\n    fontWeight: 'bold',\r\n  }\r\n}","import React, {Component} from \"react\";\r\nimport Radium from 'radium';\r\nimport styles from './styles'\r\n\r\nclass pet extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      loading: true,\r\n      items: []\r\n    };\r\n  }\r\n\r\n  getExcerpt = (e) => {\r\n    const element = e.target.parentElement.parentElement.parentElement.childNodes[2]\r\n    console.log(element)\r\n    let x = e.clientX + document.body.scrollLeft + 20;\r\n    let y = e.clientY + document.body.scrollTop - 5;\r\n    element.style.left = x + \"px\";\r\n    element.style.top = y + \"px\";\r\n    element.style.display = \"block\";\r\n  }\r\n\r\n  outExcerpt = (e) => {\r\n    const element = e.target.parentElement.parentElement.parentElement.childNodes[2]\r\n    element.style.display = \"none\";\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.getDcardAPIPost(nextProps)\r\n  }\r\n  componentDidMount() {\r\n    this.getDcardAPIPost()\r\n  }\r\n\r\n  getDcardAPIPost = (nextProps = this.props) => {\r\n    this.setState((ps) => ({...ps, items: [], loading: true}));\r\n    const url = `https://www.dcard.tw/_api/forums/${nextProps.type}/posts?popular=true`\r\n    console.log(url)\r\n    fetch(url, {\r\n      mode: \"cors\"\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        result => {\r\n          const items = this.state.items;\r\n          items.push(result);\r\n          this.setState({\r\n            loading: false,\r\n            items: items\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            loading: false,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  loaded = (e) => {\r\n    e.style.background = 'none';\r\n  }\r\n\r\n  handleImageLoad = (e) => {\r\n    e.target.addEventListener('load', this.loaded(e.target))\r\n    e.target.addEventListener('error', function () {\r\n      alert('error')\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {error, loading, items} = this.state;\r\n    return (\r\n      <div style={styles.container}>\r\n        {loading && <div style={styles.loading} >Loading...</div>}\r\n        {!loading && error && <div>Error: {error.message}</div>}\r\n        {!loading && !error && items && !items[0].error && items[0].map(post =>\r\n          <div style={styles.postContainer} key={post.createdAt}>\r\n            <div style={styles.postTitle} key={post.id} onClick={() => window.open(`https://www.dcard.tw/f/${this.props.type}/p/${post.id}`)} target=\"_blank\">\r\n              {post.title}\r\n            </div>\r\n            {post.media.map((imgData, index) =>\r\n              <div>\r\n                <div key={imgData.url + index} style={styles.imageDiv}>\r\n                  <a style={{display: 'flex'}} href={imgData.url} target=\"_blank\">\r\n                    <img style={styles.imageContainer} alt=\"\" src={imgData.url} onLoad={(e) => this.handleImageLoad(e)} />\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            )}\r\n            {!!!post.media === false && post.excerpt != false && <div style={styles.postExcerpt} >{post.excerpt}... <div style={{color: 'red'}} onClick={() => alert('騙你的，你要點標題')}>(閱覽全部)</div></div>}\r\n          </div>)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Radium(pet);\r\n"],"sourceRoot":""}